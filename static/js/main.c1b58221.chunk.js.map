{"version":3,"sources":["assets/loader.gif","components/modal/modal.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/search-box.component.jsx","components/pagination/paginationBar.jsx","components/country-details/country-details.jsx","utils/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","boxShadow","transition","height","overflow","ModalBox","props","isOpen","onAfterOpen","onRequestClose","style","contentLabel","onClick","children","Card","country","openModal","countryName","className","name","alt","src","flag","capital","CardList","countries","page","pageStart","pageEnd","countrySort","slice","map","key","indexOf","number","SearchBox","placeholder","handleChange","type","onChange","PaginationBar","filteredCountries","getPageNumbers","showPrevPage","showNextPage","class","aria-hidden","length","CountryDetails","filter","alpha3Code","callingCodes","region","subregion","population","timezones","borders","nativeName","currencies","languages","timezone","border","borderCountry","currency","code","symbol","language","filterUtil","arr","searchFieldVal","toLowerCase","includes","App","e","setState","searchField","target","value","countryNumber","numberOfPages","Math","ceil","pageNumbers","i","push","to","statePage","state","modalIsOpen","afterOpenModal","closeModal","getCountry","val","loaded","fetch","then","response","json","this","loaderIcon","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1b58221.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.bed1d767.gif\";","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)',\n      backgroundColor       : 'rgba(234, 233, 233, .95)',\n      boxShadow             : '0 4px 8px 0 rgba(0,0,0,0.2)',\n      transition            : '0.3s',\n      height                : '400px',\n      overflow              : 'scroll'\n    }\n  };\n\n// Modal.setAppElement(\"#root\");\n\nconst ModalBox = props => {\n    \n    return(\n    <div>\n      <Modal\n          isOpen={props.isOpen}\n          onAfterOpen={props.onAfterOpen}\n          onRequestClose={props.onRequestClose}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n            <button onClick={props.onRequestClose}>close</button>\n          {props.children}\n        </Modal>\n    </div>\n  );}\n\n  export default ModalBox;","import React from \"react\";\n\nimport ModalBox from \"../modal/modal\";\n\nimport \"./card.styles.css\";\n\n\n\nexport const Card = props => {\n  const { country, openModal, countryName } = props;\n\n const setCountryName = () => {\n   const {country, openModal, countryName} = props;\n   openModal()\n   countryName(country.name)\n  }\n  \n\n  return (\n    <div className=\"card-container\" onClick={setCountryName}>\n      <img\n        alt={country.name}\n        src={country.flag}\n      />\n      <h1>{country.name}</h1>\n      <p> {country.capital} </p>\n\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card } from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\n\nexport const CardList = props => {\n  const { countries, page, openModal } = props;\n  const pageLessOne = page - 1;\n  const pageStart = pageLessOne * 20;\n  const pageEnd = pageStart + 20;\n  const countrySort = countries.slice(pageStart, pageEnd);\n  return (\n    <div className=\"card-list\">\n      {countrySort.map(country => (\n        <Card key={countries.indexOf(country)} number= {countries.indexOf(country)} country={country} openModal={openModal}\n        countryName={props.countryName}\n        ></Card>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React from 'react';\n\nconst PaginationBar = ({filteredCountries, getPageNumbers, showPrevPage, showNextPage}) => {\n   return (\n      <div>\n         <p></p>\n         <i\n         class=\"fa fa-arrow-left\"\n         aria-hidden=\"true\"\n         onClick={showPrevPage}\n         ></i>\n         {getPageNumbers(filteredCountries.length)}\n\n         <i\n         class=\"fa fa-arrow-right\"\n         aria-hidden=\"true\"\n         onClick={showNextPage}\n         ></i>\n      </div>\n    )\n}\n\nexport default PaginationBar;","import React from 'react';\n\nimport './country-details.styles.css';\n\nconst CountryDetails = ({countries, countryName}) => {\n\n    const theCountry = countries.filter(country => country.name == countryName)\n    const {name,alpha3Code, capital, flag, callingCodes, region, subregion, population, timezones, borders, nativeName, currencies, languages} = theCountry[0]\n    return (\n        <div className=\"modal-box\">\n        <div className=\"card\">\n            <div>\n                Country:<h1> {name} <span> ({alpha3Code} )</span> </h1>\n                <img src={flag} alt={'flag of ' + name}/>\n                Native name: <i> {nativeName} </i>\n                  </div>\n            <div> \n            Capital: <i>  {capital} </i> Calling Codes :<i> {callingCodes[0]} </i>\n            </div>\n        </div>\n\n        <div className=\"card\">\n            Region : <i> {region} </i>\n            Subregion : <i> {subregion} </i>\n            Population: <i> {population} </i> <br/>\n            Timezones: {timezones.map(timezone=> <li>{timezone} </li>, )}\n        </div>\n\n        <div className=\"card\">\n            Borders:  {borders.map(border=> {\n               const borderCountry = countries.filter(country=>country.alpha3Code==border)\n               return <li> {borderCountry[0].name} </li>\n\n            })}\n\n            Currencies: {currencies.map(currency=>{\n                const {code, name, symbol} = currency;\n                return <div>\n                    <li>code: <span> {code} </span> </li>\n                    <li>name: <span> {name} </span> </li>\n                    <li>symbol: <span> {symbol} </span> </li>\n                    \n                </div>\n            })}\n\n            Languages: {languages.map(language=> <li> {language.name} </li>)}\n        </div>\n        </div>\n    )\n}\n\nexport default CountryDetails;","export const filterUtil = (arr, searchFieldVal) => {\n  return arr.toLowerCase().includes(searchFieldVal);\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/searchbox/search-box.component\";\nimport PaginationBar from \"./components/pagination/paginationBar\";\nimport ModalBox from \"./components/modal/modal\";\nimport CountryDetails from \"./components/country-details/country-details\";\n\nimport { filterUtil } from \"./utils\";\nimport \"./App.css\";\n\nimport loaderIcon from \"./assets/loader.gif\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: [],\n      searchField: \"\",\n      loaded: false,\n      page: 1,\n      modalIsOpen: false,\n      countryName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => response.json())\n      .then(countries => this.setState({ countries: countries }))\n      .then(loaded => this.setState({ loaded: true }));\n  }\n\n  handleChange = e => {\n    this.setState({\n      page: 1,\n      searchField: e.target.value.toLowerCase()\n    });\n  };\n\n  getPageNumbers = (countryNumber = 200) => {\n    const numberOfPages = Math.ceil(countryNumber / 20);\n    let pageNumbers = [];\n    for (let i = 1; i <= numberOfPages; i++) {\n      pageNumbers.push(`${i}`);\n    }\n    return pageNumbers.map(number => {\n      return (\n        <Router>\n          <Switch>\n            <i className=\"pagesNumbered\">\n              <Link to={`?page=${number}`}> {number} </Link>\n              {/* <Route path={`/`} component={<CardList />} /> */}\n            </i>\n          </Switch>\n        </Router>\n      );\n    });\n  };\n\n  showPrevPage = () => {\n    const statePage = this.state.page;\n    return statePage === 1 ? \"\" : this.setState({ page: statePage - 1 });\n  };\n\n  showNextPage = () => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    // this.subtitle.style.color = \"#f00\";\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  getCountry = val => {\n    this.setState({\n      countryName: val\n    });\n  };\n\n  render() {\n    const { countries, searchField, loaded, page, countryName } = this.state;\n\n    const filteredCountries = countries.filter(country => {\n      const { name, capital } = country;\n      return filterUtil(name, searchField) || filterUtil(capital, searchField);\n    });\n\n    return (\n      <>\n        {loaded ? (\n          <div className=\"App\">\n            <h1>\n              {filteredCountries.length === 0\n                ? \"No Country\"\n                : filteredCountries.length === 1\n                ? \"1 Country\"\n                : `${filteredCountries.length} Countries`}\n            </h1>\n\n            <SearchBox\n              placeholder=\"search countries by name or capital\"\n              handleChange={this.handleChange}\n            ></SearchBox>\n            <CardList\n              countries={filteredCountries}\n              page={page}\n              openModal={this.openModal}\n              countryName={this.getCountry}\n            />\n\n            <ModalBox\n              isOpen={this.state.modalIsOpen}\n              onAfterOpen={this.afterOpenModal}\n              onRequestClose={this.closeModal}\n              contentLabel=\"Example Modal\"\n            >\n              <CountryDetails countries={countries} countryName={countryName} />\n            </ModalBox>\n\n            <PaginationBar\n              filteredCountries={filteredCountries}\n              showPrevPage={this.showPrevPage}\n              showNextPage={this.showNextPage}\n              getPageNumbers={this.getPageNumbers}\n            />\n          </div>\n        ) : (\n          <div className=\"loader\">\n            <img src={loaderIcon} alt=\"World loader\" />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}