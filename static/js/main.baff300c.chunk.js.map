{"version":3,"sources":["assets/loader.gif","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/search-box.component.jsx","components/pagination/paginationBar.jsx","components/modal/modal.jsx","components/country-details/country-details.jsx","utils/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","country","openModal","countryName","className","onClick","name","alt","src","flag","capital","withRouter","countries","location","searchField","searchUrl","search","pageStart","parseInt","split","pageEnd","countrySort","length","slice","map","key","indexOf","number","SearchBox","placeholder","handleChange","type","onChange","filteredCountries","getPageNumbers","showPrevPage","showNextPage","pageLoad","aria-hidden","to","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","boxShadow","transition","height","overflow","Modal","setAppElement","ModalBox","isOpen","onAfterOpen","onRequestClose","style","contentLabel","children","CountryDetails","filter","alpha3Code","callingCodes","region","subregion","population","timezones","borders","nativeName","currencies","languages","timezone","border","borderCountry","currency","code","symbol","language","filterUtil","arr","searchFieldVal","toLowerCase","includes","App","e","setState","page","target","value","countryNumber","numberOfPages","Math","ceil","pageNumbers","i","push","setPage","modalIsOpen","closeModal","getCountry","val","CardListContainer","state","searchCountries","loaded","fetch","then","response","json","this","afterOpenModal","path","render","loaderIcon","Component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.baff300c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.bed1d767.gif\";","import React from \"react\";\n\n\nimport \"./card.styles.css\";\n\n\n\nexport const Card = props => {\n  const { country, openModal, countryName } = props;\n\n const setCountryName = () => {\n   openModal()\n   countryName(country.name)\n  }\n  \n\n  return (\n    <div className=\"card-container\" onClick={setCountryName}>\n      <img\n        alt={country.name}\n        src={country.flag}\n      />\n      <h1>{country.name}</h1>\n      <p> {country.capital} </p>\n\n    </div>\n  );\n};\n","import React from \"react\";\nimport {withRouter} from 'react-router-dom';\nimport { Card } from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\n\nconst CardList = props => {\n  const { countries, openModal, location, searchField } = props;\n  const searchUrl = location.search;\n  const pageLoad = searchUrl ? parseInt((searchUrl.split('='))[1]) : 1;\n  const pageLessOne = pageLoad - 1;\n  const pageStart = pageLessOne * 20;\n  const pageEnd = pageStart + 20;\n  const countrySort = searchField.length > 0 ? countries : countries.slice(pageStart, pageEnd);\n  return (\n    <div className=\"card-list\">\n      {countrySort.map(country => (\n        <Card key={countries.indexOf(country)} number= {countries.indexOf(country)} country={country} openModal={openModal}\n        countryName={props.countryName}\n        ></Card>\n      ))}\n    </div>\n  );\n};\n\nexport default withRouter(CardList)","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React from 'react';\nimport {withRouter, Link} from 'react-router-dom';\n\n\nconst PaginationBar = ({filteredCountries, getPageNumbers, showPrevPage, showNextPage, location}) => {\n  \n  const searchUrl = location.search;\n  const pageLoad = parseInt((searchUrl.split('='))[1]);\n   return (\n      <div>\n         <p></p>\n       { pageLoad === 1 ? '' : (<i\n         className=\"fa fa-arrow-left\"\n         aria-hidden=\"true\" >\n         <Link to={`?page=${pageLoad - 1}`} >\n         Prev\n         </Link>\n         </i>)\n      }\n         {getPageNumbers(filteredCountries.length)}\n\n         <i\n         className=\"fa fa-arrow-right\"\n         aria-hidden=\"true\"\n         >\n            <Link to={`?page=${pageLoad + 1}`} >\n               Next\n            </Link></i>\n      </div>\n    )\n}\n\nexport default withRouter(PaginationBar);","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)',\n      backgroundColor       : 'rgba(234, 233, 233, .95)',\n      boxShadow             : '0 4px 8px 0 rgba(0,0,0,0.2)',\n      transition            : '0.3s',\n      height                : '400px',\n      overflow              : 'scroll'\n    }\n  };\n\nModal.setAppElement(\"#root\");\n\nconst ModalBox = props => {\n    \n    return(\n    <div>\n      <Modal\n          isOpen={props.isOpen}\n          onAfterOpen={props.onAfterOpen}\n          onRequestClose={props.onRequestClose}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n            <button onClick={props.onRequestClose}>close</button>\n          {props.children}\n        </Modal>\n    </div>\n  );}\n\n  export default ModalBox;","import React from 'react';\n\nimport './country-details.styles.css';\n\nconst CountryDetails = ({countries, countryName}) => {\n\n    const theCountry = countries.filter(country => country.name === countryName)\n    const {name,alpha3Code, capital, flag, callingCodes, region, subregion, population, timezones, borders, nativeName, currencies, languages} = theCountry[0]\n    return (\n        <div className=\"modal-box\">\n        <div className=\"card\">\n            <div>\n                Country:<h1> {name} <span> ({alpha3Code} )</span> </h1>\n                <img src={flag} alt={'flag of ' + name}/>\n                Native name: <i> {nativeName} </i>\n                  </div>\n            <div> \n            Capital: <i>  {capital} </i> Calling Codes :<i> {callingCodes[0]} </i>\n            </div>\n        </div>\n\n        <div className=\"card\">\n            Region : <i> {region} </i>\n            Subregion : <i> {subregion} </i>\n            Population: <i> {population} </i> <br/>\n            Timezones: {timezones.map(timezone=> <li>{timezone} </li>, )}\n        </div>\n\n        <div className=\"card\">\n            Borders:  {borders.map(border=> {\n               const borderCountry = countries.filter(country=>country.alpha3Code===border)\n               return <li> {borderCountry[0].name} </li>\n\n            })}\n\n            Currencies: {currencies.map(currency=>{\n                const {code, name, symbol} = currency;\n                return <div>\n                    <li>code: <span> {code} </span> </li>\n                    <li>name: <span> {name} </span> </li>\n                    <li>symbol: <span> {symbol} </span> </li>\n                    \n                </div>\n            })}\n\n            Languages: {languages.map(language=> <li> {language.name} </li>)}\n        </div>\n        </div>\n    )\n}\n\nexport default CountryDetails;","export const filterUtil = (arr, searchFieldVal) => {\n  return arr.toLowerCase().includes(searchFieldVal);\n};\n","import React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/searchbox/search-box.component\";\nimport PaginationBar from \"./components/pagination/paginationBar\";\nimport ModalBox from \"./components/modal/modal\";\nimport CountryDetails from \"./components/country-details/country-details\";\n\nimport { filterUtil } from \"./utils\";\nimport \"./App.css\";\n\nimport loaderIcon from \"./assets/loader.gif\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: [],\n      searchField: \"\",\n      loaded: false,\n      page: 1,\n      modalIsOpen: false,\n      countryName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => response.json())\n      .then(countries => this.setState({ countries }))\n      .then(loaded => this.setState({ loaded: true }));\n  }\n\n  handleChange = e => {\n    this.setState({\n      page: 1,\n      searchField: e.target.value.toLowerCase()\n    });\n  };\n\n  getPageNumbers = (countryNumber = 250) => {\n    const numberOfPages = Math.ceil(countryNumber / 20);\n\n    let pageNumbers = [];\n    for (let i = 1; i <= numberOfPages; i++) {\n      pageNumbers.push(`${i}`);\n    }\n    return pageNumbers.map(number => {\n      return (\n        <i className=\"pagesNumbered\" onClick={this.setPage}>\n          <Link to={`?page=${number}`}> {number} </Link>\n        </i>\n      );\n    });\n  };\n\n  setPage = () => {\n    return {};\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  getCountry = val => {\n    this.setState({\n      countryName: val\n    });\n  };\n\n  filteredCountries = (countries, searchField) => {\n    return countries.filter(country => {\n      const { name, capital } = country;\n      return filterUtil(name, searchField) || filterUtil(capital, searchField);\n    });\n  };\n\n  CardListContainer = props => {\n    const { countries, searchField, page } = this.state;\n    const searchCountries = this.filteredCountries(countries, searchField);\n\n    return (\n      <CardList\n        countries={searchCountries}\n        page={page}\n        openModal={this.openModal}\n        countryName={this.getCountry}\n        searchField={searchField}\n        {...props}\n      />\n    );\n  };\n\n  render() {\n    const { countries, searchField, loaded, countryName } = this.state;\n\n    const searchCountries = this.filteredCountries(countries, searchField);\n\n    return (\n      <>\n        {loaded ? (\n          <div className=\"App\">\n            <h1>\n              {searchCountries.length === 0\n                ? \"No Country\"\n                : searchCountries.length === 1\n                ? \"1 Country\"\n                : `${searchCountries.length} Countries`}\n            </h1>\n\n            <SearchBox\n              placeholder=\"search countries by name or capital\"\n              handleChange={this.handleChange}\n            ></SearchBox>\n\n            <ModalBox\n              isOpen={this.state.modalIsOpen}\n              onAfterOpen={this.afterOpenModal}\n              onRequestClose={this.closeModal}\n              contentLabel=\"Example Modal\"\n            >\n              <CountryDetails countries={countries} countryName={countryName} />\n            </ModalBox>\n            <Switch>\n              <Route path=\"/\" render={this.CardListContainer} />;\n            </Switch>\n            <PaginationBar\n              filteredCountries={searchCountries}\n              showPrevPage={this.showPrevPage}\n              showNextPage={this.showNextPage}\n              getPageNumbers={this.getPageNumbers}\n            />\n          </div>\n        ) : (\n          <div className=\"loader\">\n            <img src={loaderIcon} alt=\"World loader\" />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}